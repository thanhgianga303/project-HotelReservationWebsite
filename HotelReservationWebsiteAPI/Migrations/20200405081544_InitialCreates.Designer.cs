// <auto-generated />
using System;
using HotelReservationWebsiteAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HotelReservationWebsiteAPI.Migrations
{
    [DbContext(typeof(HotelReservationWebsiteContext))]
    [Migration("20200405081544_InitialCreates")]
    partial class InitialCreates
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.Account", b =>
                {
                    b.Property<int>("AccountID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountStatus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoleID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .HasColumnType("TEXT");

                    b.HasKey("AccountID");

                    b.HasIndex("RoleID");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HotelAddress")
                        .HasColumnType("TEXT");

                    b.Property<int>("HotelID")
                        .HasColumnType("INTEGER");

                    b.HasKey("AddressID");

                    b.HasIndex("CityID");

                    b.HasIndex("HotelID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.BookingDetail", b =>
                {
                    b.Property<int>("BookingDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BookingDetailStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CheckInTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CheckOutTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("CustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomID")
                        .HasColumnType("INTEGER");

                    b.HasKey("BookingDetailID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("RoomID");

                    b.ToTable("BookingDetails");
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.City", b =>
                {
                    b.Property<int>("CityID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CityCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("CityName")
                        .HasColumnType("TEXT");

                    b.HasKey("CityID");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("IdentityCard")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerID");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AccountID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.HasKey("EmployeeID");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.Hotel", b =>
                {
                    b.Property<int>("HotelID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("HotelCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("HotelName")
                        .HasColumnType("TEXT");

                    b.Property<int>("HotelStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("HotelID");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FormOfPromotion")
                        .HasColumnType("TEXT");

                    b.Property<string>("PromotionCode")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PromotionFinishTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("PromotionStartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("PromotionStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("PromotionID");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.Role", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoleCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleDecribe")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleName")
                        .HasColumnType("TEXT");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.Room", b =>
                {
                    b.Property<int>("RoomID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HotelID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PromotionID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomCategoryID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RoomName")
                        .HasColumnType("TEXT");

                    b.Property<int>("RoomNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoomStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("RoomID");

                    b.HasIndex("HotelID");

                    b.HasIndex("PromotionID");

                    b.HasIndex("RoomCategoryID");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.RoomCategory", b =>
                {
                    b.Property<int>("RoomCategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CategoryCode")
                        .HasColumnType("TEXT");

                    b.Property<string>("CategoryName")
                        .HasColumnType("TEXT");

                    b.Property<double>("UnitPrice")
                        .HasColumnType("REAL");

                    b.HasKey("RoomCategoryID");

                    b.ToTable("RoomCategories");
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.Account", b =>
                {
                    b.HasOne("HotelReservationWebsiteAPI.Models.Role", "Role")
                        .WithMany("Accounts")
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.Address", b =>
                {
                    b.HasOne("HotelReservationWebsiteAPI.Models.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservationWebsiteAPI.Models.Hotel", "Hotel")
                        .WithMany("Addresses")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.BookingDetail", b =>
                {
                    b.HasOne("HotelReservationWebsiteAPI.Models.Customer", "Customer")
                        .WithMany("BookingDetails")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservationWebsiteAPI.Models.Room", "Room")
                        .WithMany("BookingDetails")
                        .HasForeignKey("RoomID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.Customer", b =>
                {
                    b.HasOne("HotelReservationWebsiteAPI.Models.Account", "Account")
                        .WithOne("Customer")
                        .HasForeignKey("HotelReservationWebsiteAPI.Models.Customer", "AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.Employee", b =>
                {
                    b.HasOne("HotelReservationWebsiteAPI.Models.Account", "Account")
                        .WithOne("Employee")
                        .HasForeignKey("HotelReservationWebsiteAPI.Models.Employee", "AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HotelReservationWebsiteAPI.Models.Room", b =>
                {
                    b.HasOne("HotelReservationWebsiteAPI.Models.Hotel", "Hotel")
                        .WithMany("Rooms")
                        .HasForeignKey("HotelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservationWebsiteAPI.Models.Promotion", "Promotion")
                        .WithMany("Rooms")
                        .HasForeignKey("PromotionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelReservationWebsiteAPI.Models.RoomCategory", "RoomCategory")
                        .WithMany("Rooms")
                        .HasForeignKey("RoomCategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
